

function [myscreen] = somatoLoc1()


% check arguments
if ~any(nargin == [0])
  help taskTemplate
  return
end

global stimulus

stimulus.counter = 1; % This keeps track of what "run" we are on.
stimulus.scan = 1

if stimulus.scan && ~mglGetParam('ignoreInitialVols')==16 && ~mglGetParam('ignoreInitialVols')==4
    warning('ignoreInitialVols is set to %i.',mglGetParam('ignoreInitialVols'));
    if ~strcmp('y',input('Is this correct? [y/n]'))
        mglSetParam('ignoreInitialVols',input('Please input the correct value (mux8 = 16, mux2 = 4): '));
    end
end



%% Initialize Stimulus

myscreen = initStimulus('stimulus',myscreen);

if stimulus.scan
    stimulus.responseKeys = [1 2]; % corresponds to LEFT - RIGHT
else
    stimulus.responseKeys = [1 2]; % corresponds to LEFT - RIGHT
end


%% task parameters
task{1}.waitForBacktick = 1;
task{1}.segmin = [6 6 6 6];
task{1}.segmax = [6 6 6 6];
task{1}.synchToVol = [0 0 0 1];
task{1}.getResponse = [0 0 0 0];
task{1}.parameter

task{1}.random = 0;

task{1}.numBlocks = 10; %12 blocks per session

%%


% initialize the task
for phaseNum = 1:length(task)
  [task{phaseNum} myscreen] = initTask(task{phaseNum},myscreen,@startSegmentCallback,[],[]);
end

%%

function [task myscreen] = startSegmentCallback(task, myscreen)

if task.thistrial.thisseg == 1
    %play stim cond 1
    mglPlaySound(cond1)
end

if task.thistrial.thisseg == 2
    %play stim cond 2
    mglPlaySound(cond2)
end

if task.thistrial.thisseg == 3
    %play stim cond 3
    mglPlaySound(cond3)
end

if task.thistrial.thisseg == 4
    %play stim cond 4
    mglPlaySound(cond4)
end

